runOn:
  - minServerVersion: "6.0.0"
database_name: &database_name "default"
collection_name: &collection_name "default"

data: []
encrypted_fields: {
    "fields": [
        {
          "keyId": {
              "$binary": {
                # Hex of _id is: 12345678123498761234123456789012
                "base64": "EjRWeBI0mHYSNBI0VniQEg==",
                "subType": "04"
              }
          },
          "path": "encryptedUnindexed",
          "bsonType": "string"
        }
    ]
  }
key_vault_data: [
  {
    "_id": {
        "$binary": {
            # Hex of _id is: 12345678123498761234123456789012
            "base64": "EjRWeBI0mHYSNBI0VniQEg==",
            "subType": "04"
        }
    },
    "keyMaterial": {
        "$binary": {
            "base64": "sHe0kz57YW7v8g9VP9sf/+K1ex4JqKc5rf/URX3n3p8XdZ6+15uXPaSayC6adWbNxkFskuMCOifDoTT+rkqMtFkDclOy884RuGGtUysq3X7zkAWYTKi8QAfKkajvVbZl2y23UqgVasdQu3OVBQCrH/xY00nNAs/52e958nVjBuzQkSb1T8pKJAyjZsHJ60+FtnfafDZSTAIBJYn7UWBCwQ==",
            "subType": "00"
        }
    },
    "creationDate": {
        "$date": {
            "$numberLong": "1648914851981"
        }
    },
    "updateDate": {
        "$date": {
            "$numberLong": "1648914851981"
        }
    },
    "status": {
        "$numberInt": "0"
    },
    "masterKey": {
        "provider": "local"
    }
  }
]

tests:
  - description: "Insert and find FLE2 unindexed field"
    clientOptions:
      autoEncryptOpts:
        kmsProviders:
          local: {
            "key": {
              "$binary": {
                "base64": "Mng0NCt4ZHVUYUJCa1kxNkVyNUR1QURhZ2h2UzR2d2RrZzh0cFBwM3R6NmdWMDFBMUN3YkQ5aXRRMkhGRGdQV09wOGVNYUMxT2k3NjZKelhaQmRCZGJkTXVyZG9uSjFk",
                "subType": "00"
              }
            }
          }
    operations:
      - name: insertOne
        arguments:
          document: &doc0 { _id: 1, encryptedUnindexed: "value123" }
      - name: find
        arguments:
          filter: { _id: 1 }
        result: [*doc0]
    expectations:
      # Auto encryption will request the collection info.
      - command_started_event:
          command:
            listCollections: 1
            filter:
              name: *collection_name
          command_name: listCollections
      # Then key is fetched from the key vault.
      - command_started_event:
          command:
            find: datakeys
            filter: {
                  "$or": [
                      {
                          "_id": {
                              "$in": [
                                  {
                                      "$binary": {
                                          # Hex of _id is: 12345678123498761234123456789012
                                          "base64": "EjRWeBI0mHYSNBI0VniQEg==",
                                          "subType": "04"
                                      }
                                  }
                              ]
                          }
                      },
                      {
                          "keyAltNames": {
                              "$in": []
                          }
                      }
                  ]
              }
            $db: keyvault
            readConcern: { level: "majority" }
          command_name: find
      - command_started_event:
          command:
            insert: *collection_name
            documents:
              - &doc0_encrypted { "_id": 1, "encryptedUnindexed": { $$type: "binData" } }
            ordered: true
          command_name: insert
      - command_started_event:
          command:
            find: *collection_name
            filter: { "_id": { "$eq": 1 }}
          command_name: find
    outcome:
      collection:
        # Outcome is checked using a separate MongoClient without auto encryption.
        data:
          - { "_id": 1, "encryptedUnindexed": { $$type: "binData" } }

  - description: "Query with an unindexed field fails"
    clientOptions:
      autoEncryptOpts:
        kmsProviders:
          local: {
            "key": {
              "$binary": {
                "base64": "Mng0NCt4ZHVUYUJCa1kxNkVyNUR1QURhZ2h2UzR2d2RrZzh0cFBwM3R6NmdWMDFBMUN3YkQ5aXRRMkhGRGdQV09wOGVNYUMxT2k3NjZKelhaQmRCZGJkTXVyZG9uSjFk",
                "subType": "00"
              }
            }
          }
    operations:
      - name: insertOne
        arguments:
          document: &doc0 { _id: 1, encryptedUnindexed: "value123" }
      - name: find
        arguments:
          filter: { encryptedUnindexed: "value123" }
        result:
          errorContains: "Cannot query"